openapi: 3.1.0
info:
  title: Carma
  version: 1.0.0
  contact: {}
servers:
  - url: https://apicarma.bytequest.solutions/api/v1
tags:
  - name: Authentication
    description: Authentication Management
  - name: Users
    description: User Management
  - name: Newsletter
    description: Subscription for Newsletter
  - name: Contacts
    description: Contacts Management
  - name: Tips
    description: Tips Management
  - name: Resources
    description: Resources Management
  - name: Categories
    description: Categories Management
  - name: Messages
    description: Messages Management
  - name: Faker
    description: Faker & Seeder
  - name: Patients
    description: Patients Management
  - name: Practitioner
    description: Practitioner Management
  - name: Doctors
    description: Doctors Management
  - name: Onboard
    description: Onboard Users Management
paths:
  /auth/login:
    post:
      tags:
        - Authentication
      operationId: Login
      requestBody:
        content:
          application/json:
            schema:
              required:
                - email
                - password
              type: object
              properties:
                email:
                  type: string
                  example: John.Doe@gmail.com
                password:
                  type: string
                  example: $123abc456E
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: You're logged in!
                  data:
                    $ref: "#/components/schemas/Login"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Provided credentials are incorrect
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginUnprocessableEntityError"
  /auth/signup:
    post:
      tags:
        - Authentication
      operationId: Signup
      requestBody:
        content:
          application/json:
            schema:
              required:
                - firstName
                - lastName
                - email
                - role
              type: object
              properties:
                firstName:
                  type: string
                  example: John
                lastName:
                  type: string
                  example: Doe
                email:
                  type: string
                  example: John.Doe@gmail.com
                role:
                  type: string
                  enum:
                    - Doctor
                    - PractitionerFull
                    - PractitionerLimited
                    - Patient
                clinicName:
                  type: string
                  example: ZibaRoyan
                birthday:
                  type: string
                  example: 2023-10-11T00:00:00Z
                phoneNumber:
                  type: string
                  example: +17804246272
                questionnaireId:
                  type: string
                  example: 072dbcb1-37de-45f8-9cea-04bd6bab2feb
                phn:
                  type: string
                  example: 13365116
                faxNumber:
                  type: string
                  example: 1780424627
              allOf:
                - if:
                    properties:
                      role:
                        const: Patient
                  then:
                    required: [phn, birthday]
      responses:
        "201":
          description: Created Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User Registered
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Access denied.
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SignUpUnprocessableEntityError"
      security:
        - bearerAuth: []
  /auth/google:
    get:
      tags:
        - Authentication
      operationId: Google Redirect URL
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      url:
                        type: string
                        example: https://accounts.google.com/o/oauth2/auth?client_id=264215023812-9mrclslq3hhug6ksiscovfnpdl2oo5ga.apps.googleusercontent.com&prompt=consent&redirect_uri=https%3A%2F%2Fcarma-dev.bytequest.solutions%2Fauth%2Fsso%2Fgoogle&response_type=code&scope=openid+profile+email&state=are5s3dftyu3jjkhb9nvwqfrgh3gd5E3sd5f
    post:
      tags:
        - Authentication
      operationId: Google Login
      requestBody:
        content:
          application/json:
            schema:
              required:
                - code
              type: object
              properties:
                code:
                  type: string
                  example: 4/0AeaYSHCoSLQlzCvmwNfx_purqgyrLWJ2l2JvhmpRW9-amog1Suymw6HL64lKDfOYadviPg
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/Login"
                  message:
                    type: string
                    example: You're logged in!
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Bad request error occurred
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The provided credentials are incorrect.
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLoginUnprocessableEntityError"
  /auth/forget-password:
    post:
      tags:
        - Authentication
      operationId: Forget Password
      description: Send a Password Reset Link to Provided Email
      requestBody:
        content:
          application/json:
            schema:
              required:
                - email
              type: object
              properties:
                email:
                  type: string
                  example: John.Doe@gmail.com
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The password reset link sent to your email
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Provided credentials are incorrect
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForgetPasswordUnprocessableEntityError"
  /auth/reset-password:
    post:
      tags:
        - Authentication
      operationId: Reset Password
      description: Changes the Password of the User Who Requested to Reset the Password
      requestBody:
        content:
          application/json:
            schema:
              required:
                - token
                - password
              type: object
              properties:
                token:
                  type: string
                  example: oFBwDNRFNENVU5mjAX1pd
                password:
                  type: string
                  example: $123abc456E
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The password changed successfully
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Provided credentials are incorrect
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResetPasswordUnprocessableEntityError"

  /users:
    get:
      tags:
        - Users
      operationId: Fetch all Users' List
      parameters:
        - name: page
          in: query
          schema:
            type: string
            example: 1
        - name: perPage
          in: query
          schema:
            type: string
            example: 3
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/UsersData"
                  meta:
                    $ref: "#/components/schemas/PaginationMeta"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        "403":
          description: Forbidden
      security:
        - bearerAuth: []
  /users/{userId}/resend-invitation:
    post:
      tags:
        - Users
      operationId: Resend Invitation
      parameters:
        - name: userId
          in: path
          required: true
          description: The ID of the user
          schema:
            type: string
          examples:
            example:
              value: d6b613fb-00dc-44e7-b979-ded21a4df498
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The invitation sent successfully.
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Access denied.
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The requested resource not found.
      security:
        - bearerAuth: []
  /users/{userId}/resend-email-verification:
    post:
      tags:
        - Users
      operationId: Resend Email Verification
      parameters:
        - name: userId
          in: path
          required: true
          description: The ID of the user
          schema:
            type: string
          examples:
            example:
              value: d6b613fb-00dc-44e7-b979-ded21a4df498
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The email verification sent successfully.
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Access denied.
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The requested resource not found.
      security:
        - bearerAuth: []
  /users/me/update:
    patch:
      tags:
        - Users
      operationId: Update Profile
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                  example: John
                lastName:
                  type: string
                  example: Doe
                phoneNumber:
                  type: string
                  example: +17804246272
                clinicName:
                  type: string
                  example: Doctor Jane Doe Clinic
                faxNumber:
                  type: string
                  example: 1780424627
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The user updated successfully.
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateProfileUnprocessableEntityError"
      security:
        - bearerAuth: []
  /users/me/update/config:
    put:
      tags:
        - Users
      operationId: Update User Config
      requestBody:
        content:
          application/json:
            schema:
              required:
                - perPageNumber
              type: object
              properties:
                perPageNumber:
                  type: integer
                  example: 12
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The user updated successfully.
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Validation error occurred
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        perPageNumber:
                          type: integer
                          example: The perPageNumber must be greater than the 1 value or less than the 100.
      security:
        - bearerAuth: []

  /users/{userId}/verify-email:
    post:
      tags:
        - Users
      operationId: Verify Email Verification
      parameters:
        - name: userId
          in: path
          required: true
          description: The ID of the user
          schema:
            type: string
          examples:
            example:
              value: d6b613fb-00dc-44e7-b979-ded21a4df498
      requestBody:
        content:
          application/json:
            schema:
              required:
                - verificationToken
              type: object
              properties:
                verificationToken:
                  type: string
                  example: "3093"
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The email verified successfully.
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Access denied.
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The requested resource not found.
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VerifyUserEmailUnprocessableEntityError"
      security:
        - bearerAuth: []
  /users/me:
    get:
      tags:
        - Users
      operationId: Fetch User Profile
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The data fetched successfully.
                  data:
                    $ref: "#/components/schemas/UserProfileData"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
      security:
        - bearerAuth: []
  /users/upload-avatar:
    post:
      tags:
        - Users
      operationId: Upload User's Avatar
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - avatar
              properties:
                avatar:
                  type: string
                  format: binary
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Your avatar has been updated successfully.
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - The uploaded file type or size is incorrect. Please try again.
                      - The uploaded file is missing or invalid. Please check and try again.
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
      security:
        - bearerAuth: []

  /newsletters:
    post:
      tags:
        - Newsletter
      operationId: Newsletter Subscription
      requestBody:
        content:
          application/json:
            schema:
              required:
                - email
              type: object
              properties:
                email:
                  type: string
                  example: John.Doe@gmail.com
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: You successfully subscribed to the newsletter.
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NewsletterSubscribeUnprocessableEntityError"
    get:
      tags:
        - Newsletter
      operationId: Fetch Newsletter Email List
      parameters:
        - name: page
          in: query
          schema:
            type: string
            example: 1
        - name: perPage
          in: query
          schema:
            type: string
            example: 31
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/NewslettersData"
                  meta:
                    $ref: "#/components/schemas/PaginationMeta"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        "403":
          description: Forbidden
      security:
        - bearerAuth: []

  /contacts:
    get:
      tags:
        - Contacts
      operationId: Fetch Contacts List
      parameters:
        - name: page
          in: query
          schema:
            type: string
            example: 1
        - name: perPage
          in: query
          schema:
            type: string
            example: 31
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/ContactsData"
                  meta:
                    $ref: "#/components/schemas/PaginationMeta"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        "403":
          description: Forbidden
      security:
        - bearerAuth: []
    post:
      tags:
        - Contacts
      operationId: Create Contact
      requestBody:
        content:
          application/json:
            schema:
              required:
                - email
                - firstName
                - lastName
                - message
              type: object
              properties:
                email:
                  type: string
                  example: John.Doe@gmail.com
                firstName:
                  type: string
                  example: John
                lastName:
                  type: string
                  example: Doe
                message:
                  type: string
                  example: This is Message
                phoneNumber:
                  type: string
                  example: +16043655675
            examples:
              Create:
                value:
                  email: jafar@dk.com
                  firstName: kazem
                  lastName: davood
                  message: this is message
                  phoneNumber: "+16043655675"
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: You contact form submitted successfully.
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateContactUnprocessableEntityError"

  /tips:
    get:
      tags:
        - Tips
      operationId: Fetch Tips List
      parameters:
        - name: page
          in: query
          schema:
            type: string
            example: 1
        - name: perPage
          in: query
          schema:
            type: string
            example: 31
        - name: categoryId
          in: query
          schema:
            type: string
            example: uuid
        - name: keyword
          in: query
          schema:
            type: string
            example: anything
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/TipsData"
                  meta:
                    $ref: "#/components/schemas/PaginationMeta"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
      security:
        - bearerAuth: []
    post:
      tags:
        - Tips
      operationId: Create Tip
      requestBody:
        content:
          application/json:
            schema:
              required:
                - categoryId
                - description
                - url
              type: object
              properties:
                categoryId:
                  type: string
                  example: afe48fba-6da3-44fb-8281-922330ce08cb
                description:
                  type: string
                  example: A Description for Tip
                url:
                  type: string
                  example: https://example.com
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The tip created successfully.
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateTipUnprocessableEntityError"
      security:
        - bearerAuth: []
  /tips/{tipId}:
    delete:
      tags:
        - Tips
      operationId: Delete Tip
      parameters:
        - name: tipId
          in: path
          required: true
          description: The ID of the tip
          schema:
            type: string
          examples:
            example:
              value: d6b613fb-00dc-44e7-b979-ded21a4df498
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The tip deleted successfully.
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
      security:
        - bearerAuth: []
    patch:
      tags:
        - Tips
      operationId: Update Tip
      parameters:
        - name: tipId
          in: path
          required: true
          description: The ID of the tip
          schema:
            type: string
          examples:
            example:
              value: d6b613fb-00dc-44e7-b979-ded21a4df498
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                categoryId:
                  type: string
                  example: afe48fba-6da3-44fb-8281-912330ce08ca
                description:
                  type: string
                  example: A Description for Tip
                url:
                  type: string
                  example: https://example.com
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The tip updated successfully.
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateTipUnprocessableEntityError"
      security:
        - bearerAuth: []

  /resources:
    get:
      tags:
        - Resources
      operationId: Fetch Resources List
      parameters:
        - name: page
          in: query
          schema:
            type: string
            example: 1
        - name: perPage
          in: query
          schema:
            type: string
            example: 31
        - name: categoryId
          in: query
          schema:
            type: string
            example: uuid
        - name: keyword
          in: query
          schema:
            type: string
            example: anything
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/ResourcesData"
                  meta:
                    $ref: "#/components/schemas/PaginationMeta"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
      security:
        - bearerAuth: []
    post:
      tags:
        - Resources
      operationId: Create Resources
      requestBody:
        content:
          application/json:
            schema:
              required:
                - categoryId
                - title
                - url
              type: object
              properties:
                categoryId:
                  type: string
                  example: afe48fba-6da3-44fb-8281-922330ce08cc
                title:
                  type: string
                  example: Title of the Resource
                url:
                  type: string
                  example: https://example.com
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The resource created successfully.
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateResourceUnprocessableEntityError"
      security:
        - bearerAuth: []
  /resources/{resourceId}:
    patch:
      tags:
        - Resources
      operationId: Update Resource
      parameters:
        - name: resourceId
          in: path
          required: true
          description: The ID of the resource
          schema:
            type: string
          examples:
            example:
              value: d6b613fb-00dc-44e7-b979-ded21a4df498
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                categoryId:
                  type: string
                  example: afe48fba-6da3-44fb-8281-922330ce08ca
                title:
                  type: string
                  example: Title of the Resource
                url:
                  type: string
                  example: https://example.com
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The resource updated successfully.
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateResourceUnprocessableEntityError"
      security:
        - bearerAuth: []
    delete:
      tags:
        - Resources
      operationId: Delete Resource
      parameters:
        - name: resourceId
          in: path
          required: true
          description: The ID of the resource
          schema:
            type: string
          examples:
            example:
              value: d6b613fb-00dc-44e7-b979-ded21a4df498
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The resource deleted successfully.
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
      security:
        - bearerAuth: []

  /categories:
    get:
      tags:
        - Categories
      operationId: Fetch Categories List
      parameters:
        - name: page
          in: query
          schema:
            type: string
            example: 1
        - name: perPage
          in: query
          schema:
            type: string
            example: 31
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/CategoriesData"
                  meta:
                    $ref: "#/components/schemas/PaginationMeta"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
      security:
        - bearerAuth: []
    post:
      tags:
        - Categories
      operationId: Create Category
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                description:
                  type: string
                  example: this is description cat 3
                name:
                  type: string
                  example: cat 1
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The category created successfully.
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateCategoryUnprocessableEntityError"
      security:
        - bearerAuth: []
  /categories/{categoryId}:
    get:
      tags:
        - Categories
      operationId: Fetch Category
      parameters:
        - name: categoryId
          in: path
          required: true
          description: The ID of the category
          schema:
            type: string
          examples:
            example:
              value: d6b613fb-00dc-44e7-b979-ded21a4df498
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: fc65aa8f-9bf8-4b7f-b918-469f03203b31
                      name:
                        type: string
                        example: Medical History
                      description:
                        type: string
                        nullable: true
                        example: Description
                      score:
                        type: integer
                        example: 12
                      createdAt:
                        type: string
                        format: date-time
                        example: 2022-01-01T00:00:00.000Z
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
      security:
        - bearerAuth: []
    patch:
      tags:
        - Categories
      operationId: Update Category
      parameters:
        - name: categoryId
          in: path
          required: true
          description: The ID of the category
          schema:
            type: string
          examples:
            example:
              value: d6b613fb-00dc-44e7-b979-ded21a4df498
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                  example: i am description
                score:
                  type: integer
                  example: 5
                name:
                  type: string
                  example: xxxx55
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The Category updated successfully.
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateCategoryUnprocessableEntityError"
      security:
        - bearerAuth: []
    delete:
      tags:
        - Categories
      operationId: Delete Category
      parameters:
        - name: categoryId
          in: path
          required: true
          description: The ID of the category
          schema:
            type: string
          examples:
            example:
              value: d6b613fb-00dc-44e7-b979-ded21a4df498
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The Category deleted successfully.
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
      security:
        - bearerAuth: []
  /categories/{categoryId}/prompts:
    put:
      tags:
        - Categories
      operationId: UpdateCategoryPrompt
      parameters:
        - name: categoryId
          in: path
          required: true
          description: The ID of the category
          schema:
            type: string
          examples:
            example:
              value: d6b613fb-00dc-44e7-b979-ded21a4df498
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                prompt:
                  type: string
                  description: The updated prompt for the category
              required:
                - prompt
      responses:
        "200":
          description: Successfully updated the prompt
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Prompt updated successfully
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The requested resource not found.

  /messages:
    get:
      tags:
        - Messages
      operationId: Fetch User Messages List
      parameters:
        - name: page
          in: query
          schema:
            type: string
            example: 1
        - name: perPage
          in: query
          schema:
            type: string
            example: 31
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/MessagesData"
                  meta:
                    $ref: "#/components/schemas/PaginationMeta"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
      security:
        - bearerAuth: []
  /messages/{messageId}:
    delete:
      tags:
        - Messages
      operationId: Delete Message
      parameters:
        - name: messageId
          in: path
          required: true
          description: The ID of the message
          schema:
            type: string
          examples:
            example:
              value: d6b613fb-00dc-44e7-b979-ded21a4df498
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The message deleted successfully.
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
      security:
        - bearerAuth: []
    get:
      tags:
        - Messages
      operationId: Fetch Message Info
      parameters:
        - name: messageId
          in: path
          required: true
          description: The ID of the message
          schema:
            type: string
          examples:
            example:
              value: d6b613fb-00dc-44e7-b979-ded21a4df498
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The message fetched successfully.
                  data:
                    $ref: "#/components/schemas/MessageInfoData"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
      security:
        - bearerAuth: []

  /faker/seed:
    post:
      tags:
        - Faker
      operationId: Fake Seeder
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The fake entities made.
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
      security:
        - bearerAuth: []
  /faker/flush:
    post:
      tags:
        - Faker
      operationId: Reset Faker
      responses:
        "200":
          description: Successful Operation
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
      security:
        - bearerAuth: []

  /patients:
    get:
      tags:
        - Patients
      operationId: Fetch Patients List
      parameters:
        - name: questionnaireStatus
          in: query
          schema:
            type: string
            example: NotStarted
          description: NotStarted,InProgress,Completed
        - name: questionnaireId
          in: query
          schema:
            type: string
            example: b317f39a-6b15-4dac-ab28-ca6b844c3453
        - name: phn
          in: query
          schema:
            type: string
            example: 13365116
        - name: page
          in: query
          schema:
            type: string
            example: 1
        - name: perPage
          in: query
          schema:
            type: string
            example: 31
        - name: status
          in: query
          schema:
            type: string
            enum:
              - Invited
              - Registered
              - Decline
              - Active
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/PatientsData"
                  meta:
                    $ref: "#/components/schemas/PaginationMeta"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
      security:
        - bearerAuth: []
    post:
      tags:
        - Patients
      operationId: Create Patient
      requestBody:
        content:
          application/json:
            schema:
              required:
                - firstName
                - lastName
                - birthday
                - phn
              type: object
              properties:
                firstName:
                  type: string
                  example: John
                lastName:
                  type: string
                  example: Doe
                birthday:
                  type: string
                  example: 2023-10-11T00:00:00Z
                email:
                  type: string
                  example: John.Doe@gmail.com
                  description: If Phone Number isn't provided Email is required
                phoneNumber:
                  type: string
                  example: +17804246272
                  description: If Email isn't provided Phone Number is required
                phn:
                  type: string
                  example: 13365116
                questionnaireId:
                  type: string
                  example: 072dbcb1-37de-45f8-9cea-04bd6bab2feb
              oneOf:
                - required: [phoneNumber]
                - required: [email]
      responses:
        "201":
          description: Created Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The patient has been registered successfully.
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Access denied.
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreatePatientUnprocessableEntityError"
      security:
        - bearerAuth: []
  /patients/{patientId}:
    get:
      tags:
        - Patients
      operationId: Fetch Patient's Info
      parameters:
        - name: patientId
          in: path
          required: true
          description: The ID of the patient
          schema:
            type: string
          examples:
            example:
              value: d6b613fb-00dc-44e7-b979-ded21a4df498
        - name: questionnaireStatus
          in: query
          schema:
            type: string
            example: NotStarted
          description: NotStarted,InProgress,Completed
        - name: questionnaireId
          in: query
          schema:
            type: string
            example: cd8c6b23-e5e8-4015-9d54-ddd1d661255e
        - name: phn
          in: query
          schema:
            type: string
            example: 13365116
        - name: page
          in: query
          schema:
            type: string
            example: 1
        - name: perPage
          in: query
          schema:
            type: string
            example: 31
        - name: name
          in: query
          schema:
            type: string
            example: Colby
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The data fetched successfully.
                  data:
                    $ref: "#/components/schemas/PatientInfoData"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The requested resource not found.
      security:
        - bearerAuth: []
    put:
      tags:
        - Patients
      operationId: Update Patient Info By Doctor
      parameters:
        - name: patientId
          in: path
          required: true
          description: The ID of the patient
          schema:
            type: string
          examples:
            example:
              value: d6b613fb-00dc-44e7-b979-ded21a4df498
      requestBody:
        content:
          application/json:
            schema:
              required:
                - firstName
                - lastName
                - phn
              type: object
              properties:
                firstName:
                  type: string
                  example: John
                lastName:
                  type: string
                  example: Doe
                phoneNumber:
                  type: string
                  example: 1076129200
                phn:
                  type: string
                  example: 1246129345
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The user's information has been updated successfully.
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Access denied.
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The requested resource not found.
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdatePatientByDoctorUnprocessableEntityError"
      security:
        - bearerAuth: []
    delete:
      tags:
        - Patients
      operationId: Patient Delete
      parameters:
        - name: patientId
          in: path
          required: true
          description: The ID of the patient
          schema:
            type: string
          examples:
            example:
              value: d6b613fb-00dc-44e7-b979-ded21a4df498
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The user deleted successfully.
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
      security:
        - bearerAuth: []
  /patients/{patientId}/questionnaires:
    get:
      tags:
        - Patients
      operationId: Fetch Patient Questionnaires List
      parameters:
        - name: patientId
          in: path
          required: true
          description: The ID of the patient
          schema:
            type: string
          examples:
            example:
              value: d6b613fb-00dc-44e7-b979-ded21a4df498
        - name: page
          in: query
          schema:
            type: string
            example: 2
        - name: perPage
          in: query
          schema:
            type: string
            example: 10
        - name: questionnaireName
          in: query
          schema:
            type: string
            example: d6b613fb-11dc-44e7-b979-ded21a4df498
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/PatientQuestionnairesData"
                  meta:
                    $ref: "#/components/schemas/PaginationMeta"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
      security:
        - bearerAuth: []
  /patients/{patientId}/questionnaires/stats:
    get:
      tags:
        - Patients
      operationId: Fetch Patient Questionnaire Stats
      parameters:
        - name: patientId
          in: path
          required: true
          description: The ID of the patient
          schema:
            type: string
          examples:
            example:
              value: d6b613fb-00dc-44e7-b979-ded21a4df498
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The message fetched successfully.
                  data:
                    $ref: "#/components/schemas/PatientQuestionnairesStatsData"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Access denied.
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The requested resource not found.
      security:
        - bearerAuth: []
  /patients/questionnaires/assign:
    post:
      tags:
        - Patients
      operationId: Assign Questionnaire To Patient
      requestBody:
        content:
          application/json:
            schema:
              required:
                - patientId
                - questionnaireIds
              type: object
              properties:
                patientId:
                  type: string
                  example: a9b613fb-ac13-55f6-b979-ded21a4df498
                questionnaireIds:
                  type: string
                  example: d6b687ce-11dc-55f6-b979-ded21a4df498
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The questionnaire has been assigned successfully.
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Access denied.
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The requested resource not found.
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssignQuestionnaireToPatientUnprocessableEntityError"
      security:
        - bearerAuth: []

  /practitioners:
    get:
      tags:
        - Practitioner
      operationId: Fetch Doctor Practitioners
      parameters:
        - name: page
          in: query
          schema:
            type: string
            example: 1
        - name: perPage
          in: query
          schema:
            type: string
            example: 31
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/DoctorPractitionersData"
                  meta:
                    $ref: "#/components/schemas/PaginationMeta"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
      security:
        - bearerAuth: []
  /practitioners/{doctorId}:
    get:
      tags:
        - Practitioner
      operationId: Fetch Doctor Practitioners List By ID
      parameters:
        - name: doctorId
          in: path
          required: true
          description: The ID of the doctor
          schema:
            type: string
          examples:
            example:
              value: d6b613fb-00dc-44e7-b979-ded21a4df498
        - name: page
          in: query
          schema:
            type: string
            example: 3
        - name: perPage
          in: query
          schema:
            type: string
            example: 2
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/DoctorPractitionersData"
                  meta:
                    $ref: "#/components/schemas/PaginationMeta"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
      security:
        - bearerAuth: []
  /practitioners/{practitionerId}:
    delete:
      tags:
        - Practitioner
      operationId: Remove Practitioner
      parameters:
        - name: practitionerId
          in: path
          required: true
          description: The ID of the practitioner
          schema:
            type: string
          examples:
            example:
              value: d6b613fb-00dc-44e7-b979-ded21a4df498
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The user deleted successfully.
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Access denied.
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The requested resource not found.
      security:
        - bearerAuth: []
    patch:
      tags:
        - Practitioner
      operationId: Change Role Practitioner
      parameters:
        - name: practitionerId
          in: path
          required: true
          description: The ID of the practitioner
          schema:
            type: string
          examples:
            example:
              value: d6b613fb-00dc-44e7-b979-ded21a4df498
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - practitionerType
              properties:
                practitionerType:
                  type: string
                  enum:
                    - PractitionerFull
                    - PractitionerLimited
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The user updated successfully.
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Access denied.
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The requested resource not found.
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateResourceUnprocessableEntityError"
      security:
        - bearerAuth: []

  /questionnaires:
    get:
      tags:
        - Questionnaire
      operationId: Fetch Questionnaires List
      parameters:
        - name: title
          in: query
          schema:
            type: string
            example: This is title
        - name: page
          in: query
          schema:
            type: string
            example: 1
        - name: perPage
          in: query
          schema:
            type: string
            example: 31
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/QuestionnairesData"
                  meta:
                    $ref: "#/components/schemas/PaginationMeta"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
      security:
        - bearerAuth: []
    post:
      tags:
        - Questionnaire
      operationId: Create Questionnaire
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - title
                - intro
                - visibility
                - questionnaire
              properties:
                title:
                  type: string
                  example: Title of Questionnaire
                intro:
                  type: string
                  example: Intro
                prompt:
                  type: string
                  example: prompt
                visibility:
                  type: object
                  properties:
                    communityResourcesStatus:
                      type: boolean
                      example: true
                    careProviderTipsStatus:
                      type: boolean
                      example: false
                    summaryOfFindingsStatus:
                      type: boolean
                      example: true
                    assessmentAndPlanStatus:
                      type: boolean
                      example: false
                    carePlanNotesStatus:
                      type: boolean
                      example: true
                    genAiStatus:
                      type: boolean
                      example: true
                questionnaire:
                  type: string
                  format: binary
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The questionnaire created successfully.
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateQuestionnaireUnprocessableEntityError"
      security:
        - bearerAuth: []
  /questionnaires/v2:
    post:
      tags:
        - Questionnaire
      operationId: Create Questionnaire v2
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - title
                - intro
                - visibility
              properties:
                title:
                  type: string
                  example: Title of Questionnaire
                intro:
                  type: string
                  example: Intro
                prompt:
                  type: string
                  example: prompt
                visibility:
                  type: object
                  properties:
                    communityResourcesStatus:
                      type: boolean
                      example: true
                    careProviderTipsStatus:
                      type: boolean
                      example: false
                    summaryOfFindingsStatus:
                      type: boolean
                      example: true
                    assessmentAndPlanStatus:
                      type: boolean
                      example: false
                    carePlanNotesStatus:
                      type: boolean
                      example: true
                    genAiStatus:
                      type: boolean
                      example: true
      responses:
        "201":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The questionnaire created successfully.
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateQuestionnaireUnprocessableEntityError"
      security:
        - bearerAuth: []

  /questionnaires/{questionnaireId}:
    patch:
      tags:
        - Questionnaire
      operationId: Update Questionnaire
      parameters:
        - name: questionnaireId
          in: path
          required: true
          description: The ID of the questionnaire
          schema:
            type: string
          examples:
            example:
              value: d6b613fb-00dc-44e7-b979-ded21a4df498
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - title
                - visibility
              properties:
                title:
                  type: string
                  example: Title of Questionnaire
                intro:
                  type: string
                  example: Intro
                visibility:
                  type: array
                  items:
                    type: object
                    properties:
                      communityResourcesStatus:
                        type: boolean
                        example: true
                      careProviderTipsStatus:
                        type: boolean
                        example: false
                      summaryOfFindingsStatus:
                        type: boolean
                        example: true
                      assessmentAndPlanStatus:
                        type: boolean
                        example: false
                      carePlanNotesStatus:
                        type: boolean
                        example: true
                      genAiStatus:
                        type: boolean
                        example: true
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The questionnaire updated successfully.
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The requested resource not found.
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateQuestionnaireUnprocessableEntityError"
      security:
        - bearerAuth: []
    delete:
      tags:
        - Questionnaire
      operationId: Delete Questionnaire
      parameters:
        - name: questionnaireId
          in: path
          required: true
          description: The ID of the questionnaire
          schema:
            type: string
          examples:
            example:
              value: d6b613fb-00dc-44e7-b979-ded21a4df498
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The questionnaire deleted successfully.
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The requested resource not found.
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: You can not remove this questionnaire because it is assigned to a patient.
      security:
        - bearerAuth: []

  /progress/{progressId}/init:
    get:
      tags:
        - Progress
      operationId: Init Questionnaire By Patient
      parameters:
        - name: progressId
          in: path
          required: true
          description: The ID of the questionnaire progress
          schema:
            type: string
          examples:
            example:
              value: d6b613fb-00dc-44e7-b979-ded21a4df498
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The data fetched successfully.
                  data:
                    $ref: "#/components/schemas/InitData"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Access denied.
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The requested resource not found.
      security:
        - bearerAuth: []
        - QRToken: []
  /progress/{progressId}/next:
    post:
      tags:
        - Progress
      operationId: Next Question By Patient
      parameters:
        - name: progressId
          in: path
          required: true
          description: The ID of the questionnaire progress
          schema:
            type: string
          examples:
            example:
              value: d6b613fb-00dc-44e7-b979-ded21a4df498
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - optionIds
                - questionId
                - textResponse
              properties:
                questionId:
                  type: string
                  example: 594828bb-68ef-4a13-97a5-5952a13065f8
                optionIds:
                  type: string
                  example: b0f9f3e4-048e-46d0-a96f-aa2616739e9b
                textResponse:
                  type: string
                  example: Response Text
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/NextQuestionData"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NextQuestionUnprocessableEntityError"
      security:
        - bearerAuth: []
        - QRToken: []
  /progress/qr/generate:
    post:
      tags:
        - Progress
        - QR
      operationId: Generate QR Code
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - questionnaireProgressId
              properties:
                questionnaireProgressId:
                  type: string
                  example: 594828bb-68ef-4a13-97a5-5952a13065f8
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      qrToken:
                        type: string
                        example: 594828bb-68ef-4a13-97a5-5952a13065f8
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Validation error occurred
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        questionnaireProgressId:
                          type: string
                          example: The questionnaireProgressId field is required
      security:
        - bearerAuth: []
  /progress/qr/verify:
    post:
      tags:
        - Progress
        - QR
      operationId: Verify QR Code
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - token
                - birthday
              properties:
                token:
                  type: string
                  example: 594828bb-68ef-4a13-97a5-5952a13065f8
                birthday:
                  type: string
                  example: 1908-06-07T09:07:19.14555+03:25
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      questionnaireProgressId:
                        type: string
                        example: 594828bb-68ef-4a13-97a5-5952a13065f8
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Validation error occurred
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        token:
                          type: string
                          example: The token field is required
                        birthday:
                          type: string
                          example: The birthday field is required
      security:
        - bearerAuth: []
        - QRToken: []
  /progress/{progressId}/previous:
    get:
      tags:
        - Progress
      operationId: Previous Question By Patient
      parameters:
        - name: progressId
          in: path
          required: true
          description: The ID of the questionnaire progress
          schema:
            type: string
          examples:
            example:
              value: d6b613fb-00dc-44e7-b979-ded21a4df498
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The data fetched successfully.
                  data:
                    $ref: "#/components/schemas/PreviousQuestionData"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Access denied.
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The requested resource not found.
      security:
        - bearerAuth: []
        - QRToken: []
  /progress/{progressId}/init/{patientId}:
    get:
      tags:
        - Progress
      operationId: Init Questionnaire By Doctor
      parameters:
        - name: progressId
          in: path
          required: true
          description: The ID of the questionnaire progress
          schema:
            type: string
          examples:
            example:
              value: d6b613fb-00dc-44e7-b979-ded21a4df498
        - name: patientId
          in: path
          required: true
          description: The ID of the patient
          schema:
            type: string
          examples:
            example:
              value: d6b613fb-21dc-44e7-b979-ded21a4df498
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The data fetched successfully.
                  data:
                    $ref: "#/components/schemas/InitData"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Access denied.
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The requested resource not found.
      security:
        - bearerAuth: []
  /progress/{progressId}/next/{patientId}:
    post:
      tags:
        - Progress
      operationId: Next Question By Doctor
      parameters:
        - name: progressId
          in: path
          required: true
          description: The ID of the questionnaire  progress
          schema:
            type: string
          examples:
            example:
              value: d6b613fb-00dc-44e7-b979-ded21a4df498
        - name: patientId
          in: path
          required: true
          description: The ID of the patient
          schema:
            type: string
          examples:
            example:
              value: d6b613fb-21dc-44e7-b979-ded21a4df498
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - optionIds
                - questionId
                - textResponse
              properties:
                questionId:
                  type: string
                  example: 594828bb-68ef-4a13-97a5-5952a13065f8
                optionIds:
                  type: string
                  example: b0f9f3e4-048e-46d0-a96f-aa2616739e9b
                textResponse:
                  type: string
                  example: Response Text
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/NextQuestionData"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NextQuestionUnprocessableEntityError"
      security:
        - bearerAuth: []
  /progress/{progressId}/previous/{patientId}:
    get:
      tags:
        - Progress
      operationId: Previous Question By Doctor
      parameters:
        - name: progressId
          in: path
          required: true
          description: The ID of the questionnaire progress
          schema:
            type: string
          examples:
            example:
              value: d6b613fb-00dc-44e7-b979-ded21a4df498
        - name: patientId
          in: path
          required: true
          description: The ID of the patient
          schema:
            type: string
          examples:
            example:
              value: d6b613fb-21dc-44e7-b979-ded21a4df498
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The data fetched successfully.
                  data:
                    $ref: "#/components/schemas/PreviousQuestionData"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Access denied.
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The requested resource not found.
      security:
        - bearerAuth: []

  /questionnaires/{questionnaireId}/preview/init:
    get:
      tags:
        - Questionnaire
      operationId: Preview Init Questionnaire
      parameters:
        - name: questionnaireId
          in: path
          required: true
          description: The ID of the questionnaire
          schema:
            type: string
          examples:
            example:
              value: d6b613fb-00dc-44e7-b979-ded21a4df498
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/InitData"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The requested resource not found.
      security:
        - bearerAuth: []
  /questionnaires/{questionnaireId}/preview/next:
    post:
      tags:
        - Questionnaire
      operationId: Next Question Preview
      parameters:
        - name: questionnaireId
          in: path
          required: true
          description: The ID of the questionnaire
          schema:
            type: string
          examples:
            example:
              value: d6b613fb-00dc-44e7-b979-ded21a4df498
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - optionIds
                - questionId
                - textResponse
              properties:
                questionId:
                  type: string
                  example: 594828bb-68ef-4a13-97a5-5952a13065f8
                optionIds:
                  type: string
                  example: b0f9f3e4-048e-46d0-a96f-aa2616739e9b
                textResponse:
                  type: string
                  example: Response Text
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/NextQuestionData"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: You do not have permission to respond to this questionnaire's questions
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The requested resource not found.
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NextQuestionUnprocessableEntityError"
      security:
        - bearerAuth: []
  /questionnaires/{questionnaireId}/preview/previous:
    get:
      tags:
        - Questionnaire
      operationId: Previous Question Preview
      parameters:
        - name: questionnaireId
          in: path
          required: true
          description: The ID of the questionnaire
          schema:
            type: string
          examples:
            example:
              value: d6b613fb-00dc-44e7-b979-ded21a4df498
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/PreviousQuestionData"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Access denied.
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The requested resource not found.
      security:
        - bearerAuth: []
  /questionnaires/{questionnaireId}/preview:
    delete:
      tags:
        - Questionnaire
      operationId: Remove Preview Responses
      parameters:
        - name: questionnaireId
          in: path
          required: true
          description: The ID of the questionnaire
          schema:
            type: string
          examples:
            example:
              value: d6b613fb-00dc-44e7-b979-ded21a4df498
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The responses created successfully.
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The requested resource not found.
      security:
        - bearerAuth: []
  /questionnaires/{questionnaireId}/attachments:
    post:
      tags:
        - Questionnaire Attachments
      summary: Upload an attachment to a questionnaire
      operationId: uploadAttachment
      parameters:
        - name: questionnaireId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: The UUID of the questionnaire
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: The title of the attachment
                type:
                  type: string
                  enum: [Link, Pdf, Doc, Docx, Txt]
                  description: The type of attachment. If `Link`, the link field is required, otherwise a file is required.
                link:
                  type: string
                  format: uri
                  description: URL of the link, required when type is `Link`
                file:
                  type: string
                  format: binary
                  description: File upload, required when type is `Pdf`, `Doc`, `Docx`, or `Txt`
              required:
                - title
                - type
      responses:
        "201":
          description: Created Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The Attachment has been uploaded successfully.
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The requested resource not found.
    get:
      tags:
        - Questionnaire Attachments
      summary: Get a list of attachments for a questionnaire
      operationId: getAttachments
      parameters:
        - name: questionnaireId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: The UUID of the questionnaire
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 1
          description: The page number for pagination
        - name: perPage
          in: query
          required: false
          schema:
            type: integer
            default: 10
          description: Number of items per page
      responses:
        "200":
          description: A list of attachments
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                          description: The attachment's unique identifier
                        questionnaireId:
                          type: string
                          format: uuid
                          description: The associated questionnaire's UUID
                        title:
                          type: string
                          description: The title of the attachment
                        content:
                          type: string
                          description: The content (e.g., a link or file path)
                        type:
                          type: string
                          description: The type of the attachment (e.g., Link)
                        createdAt:
                          type: string
                          format: date-time
                          description: The creation timestamp of the attachment
                  meta:
                    type: object
                    properties:
                      pagination:
                        type: object
                        properties:
                          totalItems:
                            type: integer
                            description: Total number of items
                          totalPages:
                            type: integer
                            description: Total number of pages
                          current:
                            type: integer
                            description: Current page number
                          next:
                            type: integer
                            description: The next page number, if any
                          previous:
                            type: integer
                            description: The previous page number, if any
                          perPage:
                            type: integer
                            description: Items per page
                      questionnaireInfo:
                        type: object
                        properties:
                          ID:
                            type: string
                            format: uuid
                            description: The questionnaire's unique identifier
                          Title:
                            type: string
                            description: The title of the questionnaire
                          IntroDescription:
                            type: string
                            description: The introduction description of the questionnaire
                          Prompt:
                            type: string
                            description: The prompt or extra info for the questionnaire
                          Visibility:
                            type: object
                            properties:
                              communityResourcesStatus:
                                type: boolean
                                description: Visibility of community resources
                              careProviderTipsStatus:
                                type: boolean
                                description: Visibility of care provider tips
                              summaryOfFindingsStatus:
                                type: boolean
                                description: Visibility of summary of findings
                              assessmentAndPlanStatus:
                                type: boolean
                                description: Visibility of assessment and plan
                              carePlanNotesStatus:
                                type: boolean
                                description: Visibility of care plan notes
                              genAiStatus:
                                type: boolean
                                description: Visibility of Gen AI status
                          CreatedAt:
                            type: string
                            format: date-time
                            description: The creation timestamp of the questionnaire
                          UpdatedAt:
                            type: string
                            format: date-time
                            description: The last update timestamp of the questionnaire
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The requested resource not found.
  /questionnaires/attachments/{attachmentId}:
    delete:
      tags:
        - Questionnaire Attachments
      summary: Delete an attachment by ID
      operationId: deleteAttachment
      parameters:
        - name: attachmentId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: The UUID of the attachment to be deleted
      responses:
        "200":
          description: Attachment deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The questionnaire attachment has been deleted successfully
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The requested resource not found.
  # Questionnaire Question Builder
  /api/v1/questionnaires/{questionnaireId}/categories:
    post:
      tags:
        - Questionnaire
      summary: Add a category to a questionnaire
      operationId: addCategoryToQuestionnaire
      parameters:
        - name: questionnaireId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: The UUID of the questionnaire
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the category
                description:
                  type: string
                  description: The description of the category
                categoryId:
                  type: string
                  format: uuid
                  description: The UUID of an existing category (optional)
              required:
                - name
      responses:
        "201":
          description: Category created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: category_created
                  data:
                    type: object
                    properties:
                      categoryId:
                        type: string
                        format: uuid
                        description: The ID of the created category
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateCategoryUnprocessableEntityError"
      security:
        - bearerAuth: []
  /api/v1/questionnaires/{questionnaireId}/questions:
    post:
      tags:
        - Questionnaire
        - Question
      operationId: CreateQuestion
      parameters:
        - name: questionnaireId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the questionnaire
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - categoryId
                - type
                - minRequiredOptionNumber
                - maxRequiredOptionNumber
              properties:
                categoryId:
                  type: string
                title:
                  type: string
                  example: What is your favorite color?
                description:
                  type: string
                  example: What is your favorite color?
                type:
                  type: string
                  enum:
                    - SingleSelectText
                    - MultiSelectText
                    - SingleSelectImage
                    - MultiSelectImage
                    - TextResponseShort
                    - TextResponseLong
                minRequiredOptionNumber:
                  type: integer
                maxRequiredOptionNumber:
                  type: integer
      responses:
        "201":
          description: Question created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The question was created successfully.
                  data:
                    type: object
                    properties:
                      questionId:
                        type: string
                        example: 123e4567-e89b-12d3-a456-426614174000
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Not Found
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateCategoryUnprocessableEntityError"

      security:
        - bearerAuth: []

    patch:
      tags:
        - Questionnaire
        - Question
      operationId: UpdateQuestion
      parameters:
        - name: questionnaireId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the questionnaire
        - name: questionId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the question
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                categoryId:
                  type: string
                title:
                  type: string
                  example: What is your favorite color?
                description:
                  type: string
                  example: What is your favorite color?
                type:
                  type: string
                  enum:
                    - SingleSelectText
                    - MultiSelectText
                    - SingleSelectImage
                    - MultiSelectImage
                    - TextResponseShort
                    - TextResponseLong
                minRequiredOptionNumber:
                  type: integer
                maxRequiredOptionNumber:
                  type: integer
      responses:
        "200":
          description: Question updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The question was updated successfully.
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Not Found
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Bad Request
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateCategoryUnprocessableEntityError"

      security:
        - bearerAuth: []
  /api/v1/questionnaires/{questionnaireId}/questions/{questionId}/options:
    post:
      tags:
        - Questionnaire
        - Question
      operationId: CreateOption
      parameters:
        - name: questionnaireId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the questionnaire
        - name: questionId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the question
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Blue
                description:
                  type: string
                  example: Blue
                score:
                  type: integer
                  example: 1
                imageName:
                  type: string
                  example: image.jpg
      responses:
        "201":
          description: Option created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The option was created successfully.
                  data:
                    type: object
                    properties:
                      optionId:
                        type: string
                        example: 123e4567-e89b-12d3-a456-426614174000
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateCategoryUnprocessableEntityError"
      security:
        - bearerAuth: []

    patch:
      tags:
        - Questionnaire
        - Question
      operationId: UpdateOption
      parameters:
        - name: questionnaireId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the questionnaire
        - name: questionId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the question
        - name: optionId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the option
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Blue
                description:
                  type: string
                  example: Blue
                score:
                  type: integer
                  example: 1
                imageName:
                  type: string
                  example: image.jpg
      responses:
        "200":
          description: Option updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The option was updated successfully.
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Not Found
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateCategoryUnprocessableEntityError"
      security:
        - bearerAuth: []

  /doctors:
    get:
      tags:
        - Doctors
      operationId: Fetch Doctors List
      parameters:
        - name: page
          in: query
          schema:
            type: string
            example: 1
        - name: perPage
          in: query
          schema:
            type: string
            example: 31
        - name: name
          in: query
          schema:
            type: string
            example: Ostwald
        - name: status
          in: query
          schema:
            type: string
            enum:
              - Invited
              - Decline
              - Active
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/DoctorsListData"
                  meta:
                    $ref: "#/components/schemas/PaginationMeta"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
      security:
        - bearerAuth: []
  /doctors/{doctorId}:
    get:
      tags:
        - Doctors
      operationId: Fetch Doctor Information
      parameters:
        - name: doctorId
          in: path
          required: true
          description: The ID of the doctor
          schema:
            type: string
          examples:
            example:
              value: d6b613fb-00dc-44e7-b979-ded21a4df498
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The data fetched successfully.
                  data:
                    properties:
                      id:
                        type: string
                        example: fc65aa8f-9bf8-4b7f-b918-469f03203b31
                      firstName:
                        type: string
                        example: John
                      lastName:
                        type: string
                        example: Doe
                      phoneNumber:
                        type: string
                        nullable: true
                        example: 13514463216
                      email:
                        type: string
                        example: John.Doe@gmail.com
                      clinicName:
                        type: string
                        example: Doctor Jane Doe Clinic
                      status:
                        type: string
                        enum:
                          - Invited
                          - Decline
                          - Active
                      avatarUrl:
                        type: string
                        example: https://carmax-avatar-buckets.s1.ca-central-1.amazonaws.com/avatars/avatar.jpg
                      createdAt:
                        type: string
                        example: 2024-03-21T03:50:00.253695+03:30
                      patientCount:
                        type: integer
                        example: 54
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The requested resource not found.
      security:
        - bearerAuth: []
    delete:
      tags:
        - Doctors
      operationId: Remove Doctor
      parameters:
        - name: doctorId
          in: path
          required: true
          description: The ID of the doctor
          schema:
            type: string
          examples:
            example:
              value: d6b613fb-00dc-44e7-b979-ded21a4df498
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The user deleted successfully.
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The requested resource not found.
      security:
        - bearerAuth: []
  /doctors/stats:
    get:
      tags:
        - Doctors
      operationId: Fetch Doctors Stats
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The data fetched successfully.
                  data:
                    $ref: "#/components/schemas/DoctorStatsData"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
      security:
        - bearerAuth: []
  /doctors/patients-stats:
    get:
      tags:
        - Doctors
      operationId: Patient Stats
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The data fetched successfully.
                  data:
                    $ref: "#/components/schemas/DoctorPatientsStatsData"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
      security:
        - bearerAuth: []
  /doctors/{doctorId}/questionnaires:
    get:
      tags:
        - Doctors
      operationId: Fetch Available Questionnaires' for Doctor
      parameters:
        - name: title
          in: query
          schema:
            type: string
            example: This is title
        - name: IsNotAssigned
          in: query
          schema:
            type: boolean
            example: true
        - name: page
          in: query
          schema:
            type: string
            example: 1
        - name: perPage
          in: query
          schema:
            type: string
            example: 31
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/QuestionnairesData"
                  meta:
                    $ref: "#/components/schemas/PaginationMeta"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
      security:
        - bearerAuth: []
  /doctors/questionnaires/assign:
    post:
      tags:
        - Doctors
      operationId: Assign Questionnaire To Doctor
      requestBody:
        content:
          application/json:
            schema:
              required:
                - doctorId
                - questionnaireIds
              type: object
              properties:
                doctorId:
                  type: string
                  example: a9b613fb-ac13-55f6-b979-ded21a4df498
                questionnaireIds:
                  type: string
                  example: d6b687ce-11dc-55f6-b979-ded21a4df498
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The questionnaires have been assigned to the doctor successfully.
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Access denied.
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: This questionnaire has already been assigned to the doctor.
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssignQuestionnaireToDoctorUnprocessableEntityError"
      security:
        - bearerAuth: []
  /doctors/questionnaires/unassign:
    post:
      tags:
        - Doctors
      operationId: Unassign Questionnaire From Doctor
      requestBody:
        content:
          application/json:
            schema:
              required:
                - doctorId
                - questionnaireIds
              type: object
              properties:
                doctorId:
                  type: string
                  example: a9b613fb-ac13-55f6-b979-ded21a4df498
                questionnaireIds:
                  type: string
                  example: d6b687ce-11dc-55f6-b979-ded21a4df498
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The questionnaires have been unassigned from the doctor successfully.
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Access denied.
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The doctor has already assigned this questionnaire to a patient and you cannot unassign it
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssignQuestionnaireToDoctorUnprocessableEntityError"
      security:
        - bearerAuth: []

  /onboard/patients/birthday/verify:
    post:
      tags:
        - Onboard
      operationId: Verify Patient Birthday
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - birthday
                - token
              properties:
                birthday:
                  type: string
                  example: 2023-10-11T00:00:00Z
                token:
                  type: string
                  example: nek7PbzdXnv07LxG9WKeRlnC4spvBALvJCwxPcg6ahcfYkHN
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The patient birthday verified.
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Provided credentials are incorrect.
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Access denied.
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VerifyPatientBirthdayUnprocessableEntityError"
  /onboard/patients/representative:
    patch:
      tags:
        - Onboard
      operationId: Update Patient Representative
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - token
                - representativeFullname
                - representativeType
              properties:
                representativeFullname:
                  type: string
                  example: John Doe
                representativeType:
                  type: string
                  enum:
                    - Themselves
                    - Caregiver
                    - FamilyMember
                    - NoRelation
                token:
                  type: string
                  example: f0wIPDWH2kqLhXIMa6I2tOknPTP8KIel3lujJuDodnDFWnEp
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The patient representative updated.
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Provided credentials are incorrect.
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Access denied.
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdatePatientRepresentativeUnprocessableEntityError"
  /onboard/users/modify-fullname:
    patch:
      tags:
        - Onboard
      operationId: Modify User FullName
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - firstName
                - lastName
                - token
              properties:
                firstName:
                  type: string
                  example: mariz
                lastName:
                  type: string
                  example: dastyar2
                token:
                  type: string
                  example: f0wIPDWH2kqLhXIMa6I2tOknPTP8KIel3lujJuDodnDFWnEp
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The user info updated.
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Provided credentials are incorrect.
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Access denied.
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ModifyUserFullNameUnprocessableEntityError"
  /onboard/users/set-password:
    post:
      tags:
        - Onboard
      operationId: Set Password
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - password
                - token
              properties:
                password:
                  type: string
                  example: $123abc456E
                token:
                  type: string
                  example: f0wIPDWH2kqLhXIMa6I2tOknPTP8KIel3lujJuDodnDFWnEp
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The user registered.
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Provided credentials are incorrect.
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SetPasswordUnprocessableEntityError"
  /onboard/users/resend-email-verification:
    post:
      tags:
        - Onboard
      operationId: Resened Email Verification
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - password
                - token
              properties:
                password:
                  type: string
                  example: $123abc456E
                token:
                  type: string
                  example: f0wIPDWH2kqLhXIMa6I2tOknPTP8KIel3lujJuDodnDFWnEp
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The email verification sent successfully.
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Provided credentials are incorrect.
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Access denied.
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResendEmailVerificationUnprocessableEntityError"
  /onboard/me/{token}:
    get:
      tags:
        - Onboard
      operationId: Fetch Onboard User Information
      parameters:
        - name: token
          in: path
          required: true
          description: Token
          schema:
            type: string
          examples:
            example:
              value: ou1H5eUDx6ZH4vDLkMZZvscpzvqQqydvtZoWhbxipubxYQ1Q
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The user info fetched.
                  data:
                    $ref: "#/components/schemas/OnboardUserInfoData"
  /onboard/users/verify:
    post:
      tags:
        - Onboard
      operationId: Verify Token
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - token
              properties:
                token:
                  type: string
                  example: JAO1yFfkhVQJUoEawSZPwLW1QCgPJ7v5QPMQy9lLQO9QbAqe
            examples:
              users/verify:
                value:
                  token: JAO1yFfkhVQJUoEawSZPwLW1QCgPJ7v5QPMQy9lLQO9QbAqe
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Token verified.
                  data:
                    $ref: "#/components/schemas/VerifyTokenData"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Provided credentials are incorrect.
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VerifyTokenUnprocessableEntityError"
  /onboard/users/decline-invitation:
    post:
      tags:
        - Onboard
      operationId: Decline User Invitation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - token
              properties:
                token:
                  type: string
                  example: 7HJCbhPcWf3BhaULx57rzVqNufVoRzYOmNXvBbPeR1AvKF8S
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The user declined.
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Provided credentials are incorrect.
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Access denied.
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeclineUserInvitationUnprocessableEntityError"
  /onboard/users/email-verify:
    post:
      tags:
        - Onboard
      operationId: Email Verify
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - token
                - verificationCode
              properties:
                token:
                  type: string
                  example: f0wIPDWH2kqLhXIMa6I2tOknPTP8KIel3lujJuDodnDFWnEp
                verificationCode:
                  type: string
                  example: "4096"
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: You're logged in!
                  data:
                    $ref: "#/components/schemas/EmailVerifyData"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Provided credentials are incorrect.
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmailVerifyUnprocessableEntityError"

  /reports:
    get:
      tags:
        - Reports
      operationId: Fetch Reports List
      parameters:
        - name: questionnaire_id
          in: query
          schema:
            type: string
            example: 072dbcb1-37de-45f8-9cea-04bd6bab2feb
        - name: name
          in: query
          schema:
            type: string
            example: Sia
        - name: report_status
          in: query
          schema:
            type: string
            enum:
              - Unknown
              - OnGoing
              - Ready
        - name: page
          in: query
          schema:
            type: string
            example: 1
        - name: perPage
          in: query
          schema:
            type: string
            example: 31
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/ReportsListData"
                  meta:
                    $ref: "#/components/schemas/PaginationMeta"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The requested resource not found.
      security:
        - bearerAuth: []
  /reports/items/{itemId}/patient-response:
    post:
      tags:
        - Reports
      operationId: Save Patient Response To Report
      parameters:
        - name: itemId
          in: path
          required: true
          description: The ID of the item
          schema:
            type: string
          examples:
            example:
              value: d6b613fb-00dc-44c7-b979-ded21a4df498
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - belongsTo
              properties:
                belongsTo:
                  type: string
                  enum:
                    - Doctor
                    - Patient
                    - Both
                    - None
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The patient response saved successfully.
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Access denied.
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The requested resource not found.
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SavePatientResponseToReportUnprocessableEntityError"
      security:
        - bearerAuth: []
  /reports/{reportId}/generate:
    post:
      tags:
        - Reports
      operationId: Generate Report
      parameters:
        - name: reportId
          in: path
          required: true
          description: The ID of the report
          schema:
            type: string
          examples:
            example:
              value: d6b613fb-0adc-44e7-b979-ded21a4df498
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The report generated successfully.
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Access denied.
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The requested resource not found.
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The report already generated.
      security:
        - bearerAuth: []
  /reports/items/{itemId}/ai-generate:
    post:
      tags:
        - Reports
      operationId: Generate ai response
      parameters:
        - name: itemId
          in: path
          required: true
          description: The ID of the item
          schema:
            type: string
          examples:
            example:
              value: d6b613fb-0adc-44e7-b979-ded21a4df498
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      response:
                        type: string
                        example: example ai response
                      responseBelongsTo:
                        type: string
                        example: none
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Access denied.
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The requested resource not found.
      security:
        - bearerAuth: []

  /reports/items/{itemId}/resources:
    post:
      tags:
        - Reports
      operationId: Save Resources To Report
      parameters:
        - name: itemId
          in: path
          required: true
          description: The ID of the item
          schema:
            type: string
          examples:
            example:
              value: d6b613fb-00dc-44e7-b9a9-ded21a4df498
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - belongsTo
                - resourceIds
              properties:
                belongsTo:
                  type: string
                  enum:
                    - Doctor
                    - Patient
                    - Both
                    - None
                resourceIds:
                  type: array
                  items:
                    type: string
                    example: fc65aa8f-9bf8-4b7f-b918-469f03203b25
                  example:
                    - fc65aa8f-9bf8-4b7f-b918-469f03203b25
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The resourced added to the report successfully.
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Access denied.
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The requested resource not found.
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Report is already completed and cannot be updated
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SaveResourcesToReportUnprocessableEntityError"
      security:
        - bearerAuth: []
  /reports/items/{itemId}/complete:
    post:
      tags:
        - Reports
      operationId: Complete Report Item
      parameters:
        - name: itemId
          in: path
          required: true
          description: The ID of the item
          schema:
            type: string
          examples:
            example:
              value: d6b613fb-0adc-44e7-b9a9-ded21a4df498
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The report item completed successfully.
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Access denied.
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The requested resource not found.
      security:
        - bearerAuth: []
  /reports/items/{itemId}/notes:
    post:
      tags:
        - Reports
      operationId: Save Notes To Report
      parameters:
        - name: itemId
          in: path
          required: true
          description: The ID of the item
          schema:
            type: string
          examples:
            example:
              value: dab613fb-00dc-44e7-b9a9-ded21a4df498
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - belongsTo
              properties:
                belongsTo:
                  type: string
                  enum:
                    - Doctor
                    - Patient
                note:
                  type: string
                  example: Suggestion Text
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The notes added to the report successfully.
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Access denied.
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The requested resource not found.
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SaveNotesToReportUnprocessableEntityError"
      security:
        - bearerAuth: []
  /reports/items/{itemId}/notes/ai:
    post:
      tags:
        - Reports
      operationId: Save AI Response Notes To Report
      parameters:
        - name: itemId
          in: path
          required: true
          description: The ID of the item
          schema:
            type: string
          examples:
            example:
              value: dab613fb-00dc-44e7-b9a9-ded21a4df498
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - belongsTo
              properties:
                belongsTo:
                  type: string
                  enum:
                    - Doctor
                    - Patient
                    - None
                    - Both
                response:
                  type: string
                  example: ai response Text
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The notes added to the report successfully.
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Access denied.
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The requested resource not found.
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SaveNotesToReportUnprocessableEntityError"
      security:
        - bearerAuth: []

  /reports/items/{itemId}/notes/patients/display-mode:
    post:
      tags:
        - Reports
      operationId: Save Patient Note Display Mode To Report
      parameters:
        - name: itemId
          in: path
          required: true
          description: The ID of the item
          schema:
            type: string
          examples:
            example:
              value: dab613fb-00dc-44e7-b9a9-ded21a4df498
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - belongsTo
              properties:
                belongsTo:
                  type: string
                  enum:
                    - Patient
                    - Both
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The patient response saved successfully.
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The patient note has invalid belongs to field.
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Access denied.
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The requested resource not found.
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Report is already completed and cannot be updated.
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SaveNotesToReportUnprocessableEntityError"
      security:
        - bearerAuth: []
  /reports/items/{itemId}/suggestion:
    put:
      tags:
        - Reports
      operationId: Update Suggestion Note
      parameters:
        - name: itemId
          in: path
          required: true
          description: The ID of the item
          schema:
            type: string
          examples:
            example:
              value: d6b613ab-00dc-44e7-b9a9-ded21a4df498
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                belongsTo:
                  type: string
                  enum:
                    - Doctor
                    - Patient
                    - Both
                    - None
                note:
                  type: string
                  example: "Suggestion Text"
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The notes added to the report successfully.
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Access denied.
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The requested resource not found.
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateSuggestionNoteUnprocessableEntityError"
      security:
        - bearerAuth: []
  /reports/{reportId}:
    get:
      tags:
        - Reports
      operationId: Fetch Report Info
      parameters:
        - name: reportId
          in: path
          required: true
          description: The ID of the report
          schema:
            type: string
          examples:
            example:
              value: d6b613fb-a0dc-44c7-b979-ded21a4df498
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The report fetched successfully.
                  data:
                    $ref: "#/components/schemas/ReportInfoData"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Access denied.
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The requested resource not found.
components:
  schemas:
    Login:
      type: array
      items:
        type: object
        properties:
          accessToken:
            type: string
            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJFbWFpbCI6ImhzYW1pZC5hYWgwQGdtYWlsLmNvbSIsIklEIjoiMGFmMTI5ODMtODMzZS00ZDQ0LWJkMzAtNDczOWUyZjBjYmYyIiwiZXhwIjoxNzA5NDY3NjM2LCJpYXQiOjE3MDk0NjA0MzYsImlzcyI6Im1vaGFtbWFkIn0.eU6UyDmdVlIWnuOVQyLi8iVci6WQFa1Tjxl7FMEcQ2U
          expireTime:
            type: string
            example: 2024-07-22T03:46:01.166316322+03:30
    LoginUnprocessableEntityError:
      type: object
      properties:
        message:
          type: string
          example: Validation error occurred
        errors:
          type: array
          items:
            type: object
            properties:
              email:
                type: string
                example: The Email must be a valid email address
              password:
                type: string
                example: The Password field is required
    SignUpUnprocessableEntityError:
      type: object
      properties:
        message:
          type: string
          example: Validation error occurred
        errors:
          type: array
          items:
            type: object
            properties:
              firstName:
                type: string
                example: The firstName field is required.
              lastName:
                type: string
                example: The lastName field is required.
              email:
                type: string
                example: The Email must be a valid email address.
              role:
                type: string
                example: Invalid role provided.
              birthday:
                type: string
                example: The birthday field is required.
              phoneNumber:
                type: string
                example: The phoneNumber must be a valid Canada phone number.
              phn:
                type: string
                example: The phn is already exists.
              questionnaireId:
                type: string
                example: The questionnaireId must be a valid questionnaire.
              faxNumber:
                type: string
                example: The faxNumber must be 10-digit number
    GoogleLoginUnprocessableEntityError:
      type: object
      properties:
        message:
          type: string
          example: Validation error occurred
        errors:
          type: array
          items:
            type: object
            properties:
              code:
                type: string
                example: The Code field is required
    ForgetPasswordUnprocessableEntityError:
      type: object
      properties:
        message:
          type: string
          example: Validation error occurred
        errors:
          type: array
          items:
            type: object
            properties:
              email:
                type: string
                example: The Email must be a valid email address
    ResetPasswordUnprocessableEntityError:
      type: object
      properties:
        message:
          type: string
          example: Validation error occurred
        errors:
          type: array
          items:
            type: object
            properties:
              token:
                type: string
                example: The Token field is required
              password:
                type: string
                example: The password must be combine of upper and lower case letters, number and special character
    UsersData:
      type: array
      items:
        type: object
        properties:
          Items:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                  example: c360beee-79d4-417a-8f73-8d1e25f76502
                firstName:
                  type: string
                  example: John
                lastName:
                  type: string
                  example: Doe
                role:
                  type: string
                  enum:
                    - Doctor
                    - PractitionerFull
                    - PractitionerLimited
                    - Patient
                birthday:
                  type: string
                  example: 1908-06-07T09:07:19.14555+03:25
                phoneNumber:
                  type: string
                  example: 1076129200
                email:
                  type: string
                  example: John.Doe@gmail.com
                emailVerified:
                  type: boolean
                  example: true
                representativeSelected:
                  type: boolean
                  example: false
                status:
                  type: string
                  enum:
                    - Invited
                    - Decline
                    - Active
                createdAt:
                  type: string
                  example: 2024-07-23T18:11:32.225621+03:30
    UpdateProfileUnprocessableEntityError:
      type: object
      properties:
        message:
          type: string
          example: Validation error occurred
        errors:
          type: array
          items:
            type: object
            properties:
              firstName:
                type: string
                example: The firstName must be greater than the specified value.
              lastName:
                type: string
                example: The lastName must be greater than the specified value.
              phoneNumber:
                type: string
                example: The phoneNumber must be a valid Canada phone number.
              clinicName:
                type: string
                example: The clinicName must be greater than the specified value.
              faxNumber:
                type: string
                example: The faxNumber must be 10-digit number
    VerifyUserEmailUnprocessableEntityError:
      type: object
      properties:
        message:
          type: string
          example: Validation error occurred
        errors:
          type: array
          items:
            type: object
            properties:
              verificationToken:
                type: string
                example: The verificationToken field is required.
    UserProfileData:
      type: array
      items:
        type: object
        properties:
          Items:
            type: array
            items:
              type: object
              properties:
                ID:
                  type: string
                  example: c360beee-78d4-417a-8f73-8d1e25f76502
                FirstName:
                  type: string
                  example: John
                LastName:
                  type: string
                  example: Doe
                Role:
                  type: string
                  example: Patient
                Birthday:
                  type: string
                  example: 2023-10-11T00:00:00Z
                PhoneNumber:
                  type: string
                  nullable: true
                  example: 1615782970
                Email:
                  type: string
                  example: John.Doe@gmail.com
                EmailVerified:
                  type: boolean
                  example: true
                RepresentativeSelected:
                  type: boolean
                  example: False
                Status:
                  type: string
                  example: Active
                CreatedAt:
                  type: string
                  example: 2024-03-21T03:50:00.249535+03:30
                DoctorInfo:
                  type: array
                  items:
                    type: object
                    properties:
                      doctorID:
                        type: string
                        example: c360beee-78d5-417a-8f73-8d1e25f76502
                      doctorName:
                        type: string
                        example: c360beee-78d5-417a-8f73-8d1e25f76502
                      doctorClinicName:
                        type: string
                        example: c360beee-78d5-417a-8f73-8d1e25f76502
                      doctorFaxNumber:
                        type: string
                        example: 1780424627
                AvatarURL:
                  type: string
                  example: /Avatar/Avatar.jpg
    NewsletterSubscribeUnprocessableEntityError:
      type: object
      properties:
        message:
          type: string
          example: Validation error occurred
        errors:
          type: array
          items:
            type: object
            properties:
              email:
                type: string
                example: The Email must be a valid email address
    NewslettersData:
      type: array
      items:
        type: object
        properties:
          Items:
            type: array
            items:
              type: object
              properties:
                ID:
                  type: string
                  example: c360beee-78d4-417a-8f73-8d1e25f76502
                Email:
                  type: string
                  example: John.Doe@gmail.com
    ContactsData:
      type: array
      items:
        type: object
        properties:
          Items:
            type: array
            items:
              type: object
              properties:
                ID:
                  type: string
                  example: c360beee-78d4-417a-8f73-8d1e25f76502
                Email:
                  type: string
                  example: John.Doe@gmail.com
                FirstName:
                  type: string
                  example: John
                LastName:
                  type: string
                  example: Doe
                PhoneNumber:
                  type: string
                  nullable: true
                  example: +16043655675
                Message:
                  type: string
                  example: Some Message
    CreateContactUnprocessableEntityError:
      type: object
      properties:
        message:
          type: string
          example: Validation error occurred
        errors:
          type: array
          items:
            type: object
            properties:
              email:
                type: string
                example: The Email must be a valid email address.
              firstName:
                type: string
                example: The firstName field is required.
              lastName:
                type: string
                example: The lastName field is required.
              phoneNumber:
                type: string
                example: The phoneNumber must be a valid Canada phone number.
              message:
                type: string
                example: The message field is required.
    TipsData:
      type: array
      items:
        type: object
        properties:
          Items:
            type: array
            items:
              type: object
              properties:
                ID:
                  type: string
                  example: c360beee-78d4-417a-8f73-8d1e25f76502
                Category:
                  type: array
                  items:
                    properties:
                      ID:
                        type: string
                        example: afe48fba-6da3-44fb-8281-922330ce08ca
                      Name:
                        type: string
                        example: Medical History
                      Description:
                        type: string
                        nullable: true
                        example: Description
                      CreatedAt:
                        type: string
                        example: 2024-03-21T03:50:00.253695+03:30
                Description:
                  type: string
                  example: Stay hydrated to boost concentration and energy levels.
                URL:
                  type: string
                  example: https://www.healthline.com/nutrition/how-much-water-should-you-drink-per-day
    CreateTipUnprocessableEntityError:
      type: object
      properties:
        message:
          type: string
          example: Validation error occurred
        errors:
          type: array
          items:
            type: object
            properties:
              categoryId:
                type: string
                example: The categoryId must be a valid category.
              description:
                type: string
                example: The description field is required.
              url:
                type: string
                example: The url field must be a valid URL.
    UpdateTipUnprocessableEntityError:
      type: object
      properties:
        message:
          type: string
          example: Validation error occurred
        errors:
          type: array
          items:
            type: object
            properties:
              categoryId:
                type: string
                example: The categoryId must be a valid category.
              url:
                type: string
                example: The url field must be a valid URL.
    ResourcesData:
      type: array
      items:
        type: object
        properties:
          Items:
            type: array
            items:
              type: object
              properties:
                ID:
                  type: string
                  example: fc65aa8f-9bf8-4b7f-b918-469f03203b31
                Category:
                  type: array
                  items:
                    properties:
                      ID:
                        type: string
                        example: afe48fba-6da3-44fb-8281-922330ce08ca
                      Name:
                        type: string
                        example: Medical History
                      Description:
                        type: string
                        nullable: true
                        example: Description
                      CreatedAt:
                        type: string
                        example: 2024-03-21T03:50:00.253695+03:30
                Title:
                  type: string
                  example: Water Intake Guidelines
                URL:
                  type: string
                  example: https://www.healthline.com/nutrition/how-much-water-should-you-drink-per-day
    CreateResourceUnprocessableEntityError:
      type: object
      properties:
        message:
          type: string
          example: Validation error occurred
        errors:
          type: array
          items:
            type: object
            properties:
              categoryId:
                type: string
                example: The categoryId must be a valid category.
              title:
                type: string
                example: The title field is required.
              url:
                type: string
                example: The url field must be a valid URL.
    UpdateResourceUnprocessableEntityError:
      type: object
      properties:
        message:
          type: string
          example: Validation error occurred
        errors:
          type: array
          items:
            type: object
            properties:
              categoryId:
                type: string
                example: The categoryId must be a valid category.
              url:
                type: string
                example: The url field must be a valid URL.
    CategoriesData:
      type: array
      items:
        type: object
        properties:
          Items:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                  example: fc65aa8f-9bf8-4b7f-b918-469f03203b31
                name:
                  type: string
                  example: Medical History
                description:
                  type: string
                  nullable: true
                  example: Description
                score:
                  type: integer
                  example: 12
                createdAt:
                  type: string
                  example: 2024-03-21T03:50:00.253695+03:30
    CreateCategoryUnprocessableEntityError:
      type: object
      properties:
        message:
          type: string
          example: Validation error occurred
        errors:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                example: The name field is required
    UpdateCategoryUnprocessableEntityError:
      type: object
      properties:
        message:
          type: string
          example: Validation error occurred
        errors:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                example: The name field is required
    MessagesData:
      type: array
      items:
        type: object
        properties:
          Items:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                  example: fc65aa8f-9bf8-4b7f-b918-469f03203b31
                title:
                  type: string
                  example: Message Title
                description:
                  type: string
                  nullable: true
                  example: Message Description
                senderType:
                  type: string
                  example: System
                from:
                  type: string
                  example: Dr. Jane Doe
                status:
                  type: string
                  enum:
                    - Read
                    - Unread
                attachments:
                  type: array
                  items:
                    type: object
                    properties:
                      title:
                        type: string
                        example: Attachment Title
                      link:
                        type: string
                        example: /upload/attachment.pdf
                      type:
                        type: string
                        example: File
                createdAt:
                  type: string
                  example: 2024-03-21T03:50:00.253695+03:30
    MessageInfoData:
      type: array
      items:
        type: object
        properties:
          Items:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                  example: fc65aa8f-9bf8-4b7f-b918-469f03203b31
                title:
                  type: string
                  example: Message Title
                description:
                  type: string
                  nullable: true
                  example: Message Description
                senderType:
                  type: string
                  example: System
                from:
                  type: string
                  example: Dr. Jane Doe
                status:
                  type: string
                  enum:
                    - Read
                    - Unread
                attachments:
                  type: array
                  items:
                    type: object
                    properties:
                      title:
                        type: string
                        example: Attachment Title
                      link:
                        type: string
                        example: /upload/attachment.pdf
                      type:
                        type: string
                        example: File
                createdAt:
                  type: string
                  example: 2024-03-21T03:50:00.253695+03:30
    CreatePatientUnprocessableEntityError:
      type: object
      properties:
        message:
          type: string
          example: Validation error occurred
        errors:
          type: array
          items:
            type: object
            properties:
              firstName:
                type: string
                example: The firstName field is required.
              lastName:
                type: string
                example: The lastName field is required.
              birthday:
                type: string
                example: The birthday field is required.
              email:
                type: string
                example: The Email must be a valid email address.
              phoneNumber:
                type: string
                example: The phoneNumber must be a valid Canada phone number.
              phn:
                type: string
                example: The phn is already exists.
              questionnaireId:
                type: string
                example: The questionnaireId must be a valid questionnaire.
    UpdatePatientByDoctorUnprocessableEntityError:
      type: object
      properties:
        message:
          type: string
          example: Validation error occurred
        errors:
          type: array
          items:
            type: object
            properties:
              firstName:
                type: string
                example: The firstName field is required.
              lastName:
                type: string
                example: The lastName field is required.
              phoneNumber:
                type: string
                example: The phoneNumber must be a valid Canada phone number.
              phn:
                type: string
                example: The phn is already exists.
    PatientsData:
      type: array
      items:
        type: object
        properties:
          Items:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                  example: fc65aa9a-9bf8-4b7f-b918-469f03203b31
                firstName:
                  type: string
                  example: John
                lastName:
                  type: string
                  example: Doe
                phoneNumber:
                  type: string
                  nullable: true
                  example: 1365358971
                representativeType:
                  type: string
                  example: Caregiver
                representativeFullname:
                  type: string
                  example: Jane Doe
                email:
                  type: string
                  example: John.Doe@gmail.com
                birthday:
                  type: string
                  example: 2024-03-21T03:50:00.253695+03:30
                phn:
                  type: integer
                  nullable: true
                  example: 13365116
                status:
                  type: string
                  enum:
                    - Invited
                    - Registered
                    - Decline
                    - Active
                doctorID:
                  type: string
                  example: fc65ac2a-9bf8-4b7f-b918-469f03203b31
                avatarUrl:
                  type: string
                  example: https://carmax-avatar-buckets.s1.ca-central-1.amazonaws.com/avatars/avatar.jpg
                createdAt:
                  type: string
                  example: 2024-03-21T03:50:00.253695+03:30
    PatientInfoData:
      type: array
      items:
        type: object
        properties:
          Items:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                  example: fc65aa9a-9bf8-4b7f-b918-469f03203b31
                firstName:
                  type: string
                  example: John
                lastName:
                  type: string
                  example: Doe
                phoneNumber:
                  type: string
                  nullable: true
                  example: 1365358971
                representativeType:
                  type: string
                  example: Caregiver
                representativeFullname:
                  type: string
                  example: Jane Doe
                email:
                  type: string
                  example: John.Doe@gmail.com
                birthday:
                  type: string
                  example: 2024-03-21T03:50:00.253695+03:30
                phn:
                  type: integer
                  nullable: true
                  example: 13365116
                status:
                  type: string
                  enum:
                    - Invited
                    - Registered
                    - Decline
                    - Active
                doctorID:
                  type: string
                  example: fc65ac2a-9bf8-4b7f-b918-469f03203b31
                avatarUrl:
                  type: string
                  example: https://carmax-avatar-buckets.s1.ca-central-1.amazonaws.com/avatars/avatar.jpg
                createdAt:
                  type: string
                  example: 2024-03-21T03:50:00.253695+03:30
    PatientQuestionnairesData:
      type: array
      items:
        type: object
        properties:
          Items:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                  example: fc65aa8f-9bf8-4b7f-b918-469f08503b31
                questionnaireId:
                  type: string
                  example: fc65aa8f-9bf8-4b7f-b918-469f08532b31
                questionnaireTitle:
                  type: string
                  example: Title of Questionnaire
                patientId:
                  type: string
                  example: afe48fba-6da3-44fb-8281-93a230ce08ca
                patientInfo:
                  type: array
                  items:
                    type: object
                    properties:
                      firstName:
                        type: string
                        example: Johnny
                      lastName:
                        type: string
                        example: Doe
                status:
                  type: string
                  enum:
                    - NotStarted
                    - InProgress
                    - Completed
                completedAt:
                  type: string
                  example: 2024-03-21T03:50:00.253695+03:30
                reportStatus:
                  type: string
                  example: OnGoing
                assignedAt:
                  type: string
                  example: 2024-03-21T03:50:00.253695+03:30
    PatientQuestionnairesStatsData:
      type: array
      items:
        type: object
        properties:
          Items:
            type: array
            items:
              type: object
              properties:
                totalQuestionnaires:
                  type: integer
                  example: 130
                totalNumberOfInProgress:
                  type: integer
                  example: 59
                totalNumberOfCompleted:
                  type: integer
                  example: 45
                lastMonthInProgressQuestionnairePercentage:
                  type: integer
                  example: 60
                lastMonthCompletedQuestionnairePercentage:
                  type: integer
                  example: 43
                lastMonthTotalQuestionnairePercentage:
                  type: integer
                  example: 37
    AssignQuestionnaireToPatientUnprocessableEntityError:
      type: object
      properties:
        message:
          type: string
          example: Validation error occurred
        errors:
          type: array
          items:
            type: object
            properties:
              patientId:
                type: string
                example: The patientId must be a valid UUID.
              questionnaireIds:
                type: string
                example: The questionnaireIds must be a valid UUID list.
    DoctorPractitionersData:
      type: array
      items:
        type: object
        properties:
          Items:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                  example: fc65aa8f-1ae8-4b7f-b918-469f03203b31
                firstName:
                  type: string
                  example: John
                lastName:
                  type: string
                  example: Doe
                phoneNumber:
                  type: string
                  nullable: true
                  example: 1354664978
                role:
                  type: string
                  example: Practitioner
                email:
                  type: string
                  example: John.Doe@gmail.com
                status:
                  type: string
                  enum:
                    - Invited
                    - Decline
                    - Active
                doctorID:
                  type: string
                  example: fc65aa8f-1ae8-4b7f-b918-469f03203a79
                createdAt:
                  type: string
                  example: 2024-03-21T03:50:00.253695+03:30
    DoctorQuestionnairesData:
      type: array
      items:
        type: object
        properties:
          Items:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                  example: fc65aa8f-9bf8-4b7f-b918-469f08503b31
                questionnaireId:
                  type: string
                  example: fc65aa8f-9bf8-4b7f-b918-469f08532b31
                questionnaireTitle:
                  type: string
                  example: Title of Questionnaire
                patientId:
                  type: string
                  example: afe48fba-6da3-44fb-8281-93a230ce08ca
                patientInfo:
                  type: array
                  items:
                    type: object
                    properties:
                      firstName:
                        type: string
                        example: Johnny
                      lastName:
                        type: string
                        example: Doe
                status:
                  type: string
                  enum:
                    - NotStarted
                    - InProgress
                    - Completed
                completedAt:
                  type: string
                  example: 2024-03-21T03:50:00.253695+03:30
                reportStatus:
                  type: string
                  example: OnGoing
                assignedAt:
                  type: string
                  example: 2024-03-21T03:50:00.253695+03:30
    QuestionnairesData:
      type: array
      items:
        type: object
        properties:
          Items:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                  example: afe48fba-6dc9-66ab-8281-922330ce08ca
                title:
                  type: string
                  example: Title
                intro:
                  type: string
                  nullable: true
                  example: Intro Description
                visibility:
                  type: array
                  items:
                    type: object
                    properties:
                      communityResourcesStatus:
                        type: boolean
                        example: true
                      careProviderTipsStatus:
                        type: boolean
                        example: false
                      summaryOfFindingsStatus:
                        type: boolean
                        example: true
                      assessmentAndPlanStatus:
                        type: boolean
                        example: false
                      carePlanNotesStatus:
                        type: boolean
                        example: true
                createdAt:
                  type: string
                  example: 2024-03-21T03:50:00.253695+03:30
                updatedAt:
                  type: string
                  example: 2024-03-21T03:50:00.253695+03:30
    CreateQuestionnaireUnprocessableEntityError:
      type: object
      properties:
        message:
          type: string
          example: Validation error occurred
        errors:
          type: array
          items:
            type: object
            properties:
              title:
                type: string
                example: The title field is required
              intro:
                type: string
                example: The intro field is required
              visibility:
                type: array
                items:
                  type: object
                  properties:
                    communityResourcesStatus:
                      type: string
                      example: The communityResourcesStatus field is required
                    careProviderTipsStatus:
                      type: string
                      example: The careProviderTipsStatus field is required
                    summaryOfFindingsStatus:
                      type: string
                      example: The summaryOfFindingsStatus field is required
                    assessmentAndPlanStatus:
                      type: string
                      example: The assessmentAndPlanStatus field is required
                    carePlanNotesStatus:
                      type: string
                      example: The carePlanNotesStatus field is required
              questionnaire:
                type: string
                example: The questionnaire must be a valid JSON file.
    AllQuestionnairesData:
      type: array
      items:
        type: object
        properties:
          Items:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                  example: afe48fba-6da3-66ab-8281-922330ce08ca
                title:
                  type: string
                  example: Title
                intro:
                  type: string
                  example: Intro Description
                visibility:
                  type: array
                  items:
                    type: object
                    properties:
                      communityResourcesStatus:
                        type: boolean
                        example: true
                      careProviderTipsStatus:
                        type: boolean
                        example: false
                      summaryOfFindingsStatus:
                        type: boolean
                        example: true
                      assessmentAndPlanStatus:
                        type: boolean
                        example: false
                      carePlanNotesStatus:
                        type: boolean
                        example: true
                createdAt:
                  type: string
                  example: 2024-03-21T03:50:00.253695+03:30
                updatedAt:
                  type: string
                  example: 2024-03-21T03:50:00.253695+03:30
    UpdateQuestionnaireUnprocessableEntityError:
      type: object
      properties:
        message:
          type: string
          example: Validation error occurred
        errors:
          type: array
          items:
            type: object
            properties:
              title:
                type: string
                example: The title field is required
              visibility:
                type: array
                items:
                  type: object
                  properties:
                    communityResourcesStatus:
                      type: string
                      example: The communityResourcesStatus field is required
                    careProviderTipsStatus:
                      type: string
                      example: The careProviderTipsStatus field is required
                    summaryOfFindingsStatus:
                      type: string
                      example: The summaryOfFindingsStatus field is required
                    assessmentAndPlanStatus:
                      type: string
                      example: The assessmentAndPlanStatus field is required
                    carePlanNotesStatus:
                      type: string
                      example: The carePlanNotesStatus field is required
    NextQuestionUnprocessableEntityError:
      type: object
      properties:
        message:
          type: string
          example: Validation error occurred
        errors:
          type: array
          items:
            type: object
            properties:
              questionId:
                type: string
                example: The questionId must be a valid question.
              optionIds:
                type: string
                example: The number of selected optionIds is not appropriate
              textResponse:
                type: string
                example: The textResponse field is required.
    NextQuestionData:
      type: array
      items:
        type: object
        properties:
          Items:
            type: array
            items:
              type: object
              properties:
                isCompleted:
                  type: boolean
                  example: true
                intro:
                  type: string
                  nullable: true
                  example: intro text
                category:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        example: afe48fba-6da3-44fb-8281-922330ce08ca
                      name:
                        type: string
                        example: Heart
                      description:
                        type: string
                        nullable: true
                        example: Description about category
                      createdAt:
                        type: string
                        example: 2024-03-21T03:50:00.253695+03:30
                question:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        example: afe48fba-7ac6-44fb-8281-922330ce08ca
                      questionnaireId:
                        type: string
                        example: afe48fba-6da3-44fb-8281-922330ce08ca
                      questionNumber:
                        type: integer
                        example: 13
                      title:
                        type: string
                        example: Question Title
                      description:
                        type: string
                        nullable: true
                        example: Question Description
                      type:
                        type: string
                        example: MultiSelectText
                      minRequiredOptionNumber:
                        type: integer
                        example: 1
                      maxRequiredOptionNumber:
                        type: integer
                        example: 5
                options:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        example: afe48fba-6da3-44fb-5136-922330ce08ca
                      title:
                        type: string
                        example: Option title
                      description:
                        type: string
                        nullable: true
                        example: Option Description
                      imageUrl:
                        type: string
                        example: /images/image.jpg
                response:
                  type: array
                  items:
                    type: object
                    properties:
                      optionIds:
                        type: string
                        example: afe48fba-8fe4-44fb-8281-922330ce08ca
                      text:
                        type: string
                        example: Response Text
    PreviousQuestionData:
      type: array
      items:
        type: object
        properties:
          Items:
            type: array
            items:
              type: object
              properties:
                isCompleted:
                  type: boolean
                  example: true
                intro:
                  type: string
                  nullable: true
                  example: intro text
                category:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        example: afe48fba-6da3-44fb-8281-922330ce08ca
                      name:
                        type: string
                        example: Heart
                      description:
                        type: string
                        nullable: true
                        example: Description about category
                      createdAt:
                        type: string
                        example: 2024-03-21T03:50:00.253695+03:30
                question:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        example: afe48fba-7ac6-44fb-8281-922330ce08ca
                      questionnaireId:
                        type: string
                        example: afe48fba-6da3-44fb-8281-922330ce08ca
                      questionNumber:
                        type: integer
                        example: 10
                      title:
                        type: string
                        example: Question Title
                      description:
                        type: string
                        nullable: true
                        example: Question Description
                      type:
                        type: string
                        example: MultiSelectText
                      minRequiredOptionNumber:
                        type: integer
                        example: 1
                      maxRequiredOptionNumber:
                        type: integer
                        example: 6
                options:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        example: afe48fba-6da3-44fb-5136-922330ce08ca
                      title:
                        type: string
                        example: Option title
                      description:
                        type: string
                        nullable: true
                        example: Option Description
                      imageUrl:
                        type: string
                        example: /images/image.jpg
                response:
                  type: array
                  items:
                    type: object
                    properties:
                      optionIds:
                        type: string
                        example: afe48fba-8fe4-44fb-8281-922330ce08ca
                      text:
                        type: string
                        example: Response Text
    InitData:
      type: array
      items:
        type: object
        properties:
          Items:
            type: array
            items:
              type: object
              properties:
                isCompleted:
                  type: boolean
                  example: true
                intro:
                  type: string
                  nullable: true
                  example: intro text
                category:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        example: afe48fba-6da3-44fb-8281-922330ce08ca
                      name:
                        type: string
                        example: Heart
                      description:
                        type: string
                        nullable: true
                        example: Description about category
                      createdAt:
                        type: string
                        example: 2024-03-21T03:50:00.253695+03:30
                question:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        example: afe48fba-7ac6-44fb-8281-922330ce08ca
                      questionnaireId:
                        type: string
                        example: afe48fba-6da3-44fb-8281-922330ce08ca
                      questionNumber:
                        type: integer
                        example: 12
                      title:
                        type: string
                        example: Question Title
                      description:
                        type: string
                        nullable: true
                        example: Question Description
                      type:
                        type: string
                        example: MultiSelectText
                      minRequiredOptionNumber:
                        type: integer
                        example: 2
                      maxRequiredOptionNumber:
                        type: integer
                        example: 10
                options:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        example: afe48fba-6da3-44fb-5136-922330ce08ca
                      title:
                        type: string
                        example: Option title
                      description:
                        type: string
                        nullable: true
                        example: Option Description
                      imageUrl:
                        type: string
                        example: /images/image.jpg
                response:
                  type: array
                  items:
                    type: object
                    properties:
                      optionIds:
                        type: string
                        example: afe48fba-8fe4-44fb-8281-922330ce08ca
                      text:
                        type: string
                        example: Response Text
    DoctorsListData:
      type: array
      items:
        type: object
        properties:
          Items:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                  example: fc65aa8f-9bf8-4b7f-b918-469f03203b31
                firstName:
                  type: string
                  example: Jane
                lastName:
                  type: string
                  example: Doe
                phoneNumber:
                  type: string
                  nullable: true
                  example: 15463154631
                email:
                  type: string
                  example: Jane.Doe@gmail.com
                clinicName:
                  type: string
                  example: Jane Doe Clinic
                faxNumber:
                  type: string
                  example: 1780424627
                status:
                  type: string
                  enum:
                    - Invited
                    - Decline
                    - Active
                avatarUrl:
                  type: string
                  example: https://carmax-avatar-buckets.s1.ca-central-1.amazonaws.com/avatars/avatar.jpg
                createdAt:
                  type: string
                  example: 2024-03-21T03:50:00.253695+03:30
    DoctorInfoData:
      type: array
      items:
        type: object
        properties:
          Items:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                  example: fc65aa8f-9bf8-4b7f-b918-469f03203b31
                firstName:
                  type: string
                  example: John
                lastName:
                  type: string
                  example: Doe
                phoneNumber:
                  type: string
                  nullable: true
                  example: 13514463216
                email:
                  type: string
                  example: John.Doe@gmail.com
                clinicName:
                  type: string
                  example: Doctor Jane Doe Clinic
                status:
                  type: string
                  enum:
                    - Invited
                    - Decline
                    - Active
                avatarUrl:
                  type: string
                  example: https://carmax-avatar-buckets.s1.ca-central-1.amazonaws.com/avatars/avatar.jpg
                createdAt:
                  type: string
                  example: 2024-03-21T03:50:00.253695+03:30
    DoctorStatsData:
      type: array
      items:
        type: object
        properties:
          Items:
            type: array
            items:
              type: object
              properties:
                allDoctors:
                  type: integer
                  example: 100
                totalNumberOfInvitedDoctors:
                  type: integer
                  example: 50
                totalNumberOfActiveDoctors:
                  type: integer
                  example: 70
                lastMonthInvitedDoctorsPercentage:
                  type: integer
                  example: 30
                lastMonthActiveDoctorsPercentage:
                  type: integer
                  example: 50
                lastMonthTotalDoctorsPercentage:
                  type: integer
                  example: 20
    DoctorPatientsStatsData:
      type: array
      items:
        type: object
        properties:
          Items:
            type: array
            items:
              type: object
              properties:
                totalPatients:
                  type: integer
                  example: 300
                totalNumberOfInvitedPatients:
                  type: integer
                  example: 70
                totalNumberOfActivePatients:
                  type: integer
                  example: 60
                lastMonthInvitedPatientsPercentage:
                  type: integer
                  example: 40
                lastMonthActivePatientsPercentage:
                  type: integer
                  example: 30
                lastMonthTotalPatientsPercentage:
                  type: integer
                  example: 60
    AssignQuestionnaireToDoctorUnprocessableEntityError:
      type: object
      properties:
        message:
          type: string
          example: Validation error occurred
        errors:
          type: array
          items:
            type: object
            properties:
              patientId:
                type: string
                example: The patientId must be a valid UUID.
              questionnaireIds:
                type: string
                example: The questionnaireIds must be a valid UUID list.
    VerifyPatientBirthdayUnprocessableEntityError:
      type: object
      properties:
        message:
          type: string
          example: Validation error occurred
        errors:
          type: array
          items:
            type: object
            properties:
              birthday:
                type: string
                example: The birthday must be a valid RFC3339 date.
              token:
                type: string
                example: The token field is required
    UpdatePatientRepresentativeUnprocessableEntityError:
      type: object
      properties:
        message:
          type: string
          example: Validation error occurred
        errors:
          type: array
          items:
            type: object
            properties:
              token:
                type: string
                example: The token field is required
              representativeType:
                type: string
                example: Invalid representativeType provided.
              representativeFullname:
                type: string
                example: The representativeFullname field is required
    ModifyUserFullNameUnprocessableEntityError:
      type: object
      properties:
        message:
          type: string
          example: Validation error occurred
        errors:
          type: array
          items:
            type: object
            properties:
              token:
                type: string
                example: The token field is required
              firstName:
                type: string
                example: The firstName field is required
              lastName:
                type: string
                example: The lastName field is required
    SetPasswordUnprocessableEntityError:
      type: object
      properties:
        message:
          type: string
          example: Validation error occurred
        errors:
          type: array
          items:
            type: object
            properties:
              token:
                type: string
                example: The token field is required
              password:
                type: string
                example: The password must be combine of upper and lower case letters, number and special character
    ResendEmailVerificationUnprocessableEntityError:
      type: object
      properties:
        message:
          type: string
          example: Validation error occurred
        errors:
          type: array
          items:
            type: object
            properties:
              token:
                type: string
                example: The token field is required
    OnboardUserInfoData:
      type: array
      items:
        type: object
        properties:
          Items:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                  example: fc65aa8f-9bf8-4b7f-b918-469f03203b31
                firstName:
                  type: string
                  example: John
                lastName:
                  type: string
                  example: Doe
                role:
                  type: string
                  example: Patient
                email:
                  type: string
                  example: John.Doe@gmail.com
                emailVerified:
                  type: boolean
                  example: true
                hasPassword:
                  type: string
                  example:
                representativeSelected:
                  type: boolean
                  example: true
                status:
                  type: string
                  enum:
                    - Invited
                    - Decline
                    - Active
    VerifyTokenData:
      type: array
      items:
        type: object
        properties:
          role:
            type: string
            example: Patient
    VerifyTokenUnprocessableEntityError:
      type: object
      properties:
        message:
          type: string
          example: Validation error occurred
        errors:
          type: array
          items:
            type: object
            properties:
              token:
                type: string
                example: The token field is required
    DeclineUserInvitationUnprocessableEntityError:
      type: object
      properties:
        message:
          type: string
          example: Validation error occurred
        errors:
          type: array
          items:
            type: object
            properties:
              token:
                type: string
                example: The token field is required
    EmailVerifyData:
      type: array
      items:
        type: object
        properties:
          Items:
            type: array
            items:
              type: object
              properties:
                accessToken:
                  type: string
                  example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJFbWFpbCI6ImhzYW1pZC5hYWgwQGdtYWlsLmNvbSIsIklEIjoiMGFmMTI5ODMtODMzZS00ZDQ0LWJkMzAtNDczOWUyZjBjYmYyIiwiZXhwIjoxNzA5NDY3NjM2LCJpYXQiOjE3MDk0NjA0MzYsImlzcyI6Im1vaGFtbWFkIn0.eU6UyDmdVlIWnuOVQyLi8iVci6WQFa1Tjxl7FMEcQ2U
    EmailVerifyUnprocessableEntityError:
      type: object
      properties:
        message:
          type: string
          example: Validation error occurred
        errors:
          type: array
          items:
            type: object
            properties:
              token:
                type: string
                example: The token field is required
              verificationCode:
                type: string
                example: The verificationCode must have the specified length.
    ReportsListData:
      type: array
      items:
        type: object
        properties:
          Items:
            type: array
            items:
              type: object
              properties:
                reportId:
                  type: string
                  example: afe48fba-6da3-43fb-8281-922330ce08ca
                patientFirstName:
                  type: string
                  example: Johnny
                patientLastName:
                  type: string
                  example: Doe
                questionnaireTitle:
                  type: string
                  example: Title of Questionnaire
                dataOfInvitation:
                  type: string
                  example: 2024-03-21T03:50:00.253695+03:30
                dataOfSubmission:
                  type: string
                  example: 2024-03-21T03:50:00.253695+03:30
                status:
                  type: string
                  enum:
                    - Unknown
                    - OnGoing
                    - Ready
    SavePatientResponseToReportUnprocessableEntityError:
      type: object
      properties:
        message:
          type: string
          example: Validation error occurred
        errors:
          type: array
          items:
            type: object
            properties:
              belongsTo:
                type: string
                example: Invalid belongsTo provided.
    SaveResourcesToReportUnprocessableEntityError:
      type: object
      properties:
        message:
          type: string
          example: Validation error occurred
        errors:
          type: array
          items:
            type: object
            properties:
              resourceIds:
                type: string
                example: The resourceIds must be a valid UUID list.
              belongsTo:
                type: string
                example: Invalid belongsTo provided.
    SaveNotesToReportUnprocessableEntityError:
      type: object
      properties:
        message:
          type: string
          example: Validation error occurred
        errors:
          type: array
          items:
            type: object
            properties:
              belongsTo:
                type: string
                example: Invalid belongsTo provided.
    UpdateSuggestionNoteUnprocessableEntityError:
      type: object
      properties:
        message:
          type: string
          example: Validation error occurred
        errors:
          type: array
          items:
            type: object
            properties:
              belongsTo:
                type: string
                example: Invalid belongsTo provided.
    ReportInfoData:
      type: array
      items:
        type: object
        properties:
          ReportInfo:
            type: array
            items:
              type: object
              properties:
                item:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        example: afe48fba-6da3-44fb-8281-922330ce08ca
                      name:
                        type: string
                        example: Item Name
                      categoryId:
                        type: string
                        example: afe48fba-6da3-44fb-9123-922330ce08ca
                      score:
                        type: interger
                        example: 20
                      isCompleted:
                        type: boolean
                        example: true
                questionResponses:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        example: ece48fba-6da3-44fb-9123-922330ce08ca
                      question:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              example: afe48fba-6ac3-44fb-9123-922330ce08ca
                            title:
                              type: string
                              example: Title of the Question
                            description:
                              type: string
                              nullable: true
                              example: Description of the Question
                            type:
                              type: string
                              example: Question Type
                            options:
                              type: array
                              items:
                                type: object
                                properties:
                                  id:
                                    type: string
                                    example: ece48fba-6da3-44fb-9123-922330ca98ca
                                  title:
                                    type: string
                                    example: Title of the Options
                                  description:
                                    type: string
                                    nullable: true
                                    example: Description of the Option
                                  imageUrl:
                                    type: string
                                    example: https://example.com
                      selectedOptionIds:
                        type: string
                        example: ece48aca-6da3-44fb-9123-922330ce08ca
                      textResponse:
                        type: string
                        example: Text of Response
                responsesAddTo:
                  type: string
                  example: Description
                resources:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        example: aca48fba-6da3-44fb-9123-922330ce08ca
                      title:
                        type: string
                        nullable: true
                        example: Title of the Resource
                      url:
                        type: string
                        nullable: true
                        example: https://example.com
                resourceAddTo:
                  type: array
                  items:
                    type: object
                    properties:
                      resourceIds:
                        type: string
                        example: afe48fba-6a6e-44fb-8281-922330ce08ca
                      belongsTo:
                        type: string
                        example: Doctor
                doctorNote:
                  type: array
                  items:
                    type: object
                    properties:
                      notes:
                        type: string
                        nullable: true
                        example: Some Notes from doctor
                patientNote:
                  type: array
                  items:
                    type: object
                    properties:
                      notes:
                        type: string
                        nullable: true
                        example: Some Notes from patient
                patientNoteAddTo:
                  type: string
                  example: string
                suggestion:
                  type: object
                  properties:
                    notes:
                      type: string
                      nullable: true
                      example: Some Notes
                    suggestionBelongsTo:
                      type: string
                      example: Doctor
                aiResponse:
                  type: object
                  properties:
                    response:
                      type: string
                      nullable: true
                      example: Some Notes
                    responseBelongsTo:
                      type: string
                      example: Doctor
                    refrences:
                      type: array
                      example:
                        [
                          "https://example.com",
                          "https://example.com",
                          "https://example.com",
                        ]

          PatientInfo:
            type: array
            items:
              properties:
                ID:
                  type: string
                  example: afe48fba-6da3-44fb-8281-922330ce08ca
                AvatarURL:
                  type: string
                  example: /Avatar/Avatar.jpg
                Fullname:
                  type: string
                  example: Johnny Doe
                BirthDay:
                  type: string
                  example: 2024-03-21T03:50:00.253695+03:30
                PHN:
                  type: integer
                  example: 13365116
                CompletedBy:
                  type: string
                  example: Jane Doe
                RiskScore:
                  type: integer
                  example: 41
                DataOfSubmission:
                  type: string
                  example: 2024-03-21T03:50:00.253695+03:30
          ResponderInfo:
            type: array
            items:
              properties:
                Fullname:
                  type: string
                  example: Johnny Doe
                Role:
                  type: string
                  example: Patient
          Status:
            type: string
            example: unknown
          Visibility:
            type: array
            items:
              type: object
              properties:
                communityResourcesStatus:
                  type: boolean
                  example: true
                careProviderTipsStatus:
                  type: boolean
                  example: false
                summaryOfFindingsStatus:
                  type: boolean
                  example: true
                assessmentAndPlanStatus:
                  type: boolean
                  example: false
                carePlanNotesStatus:
                  type: boolean
                  example: true
    PaginationMeta:
      type: array
      items:
        type: object
        properties:
          totalItems:
            type: integer
            example: 221
          totalPages:
            type: integer
            example: 22
          current:
            type: integer
            example: 10
          next:
            type: integer
            example: 11
          previous:
            type: integer
            example: 9
          perPage:
            type: integer
            example: 10
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    QRToken:
      type: token
      in: header
      name: QR-Token
